@dark-purple: #3f0056;

// General colors
@syntax-text-color: #555;
@syntax-cursor-color: black;
@syntax-selection-color: #afc4da;
@syntax-background-color: white;

// Guide colors
@syntax-wrap-guide-color: rgba(85, 85, 85, .2);
@syntax-indent-guide-color: rgba(85, 85, 85, .2);
@syntax-invisible-character-color: rgba(85, 85, 85, .2);

// For find and replace markers
@syntax-result-marker-color: #999;
@syntax-result-marker-color-selected: black;

// Gutter colors
@syntax-gutter-text-color: @syntax-text-color;
@syntax-gutter-text-color-selected: @syntax-gutter-text-color;
@syntax-gutter-background-color: white;
@syntax-gutter-background-color-selected: rgba(255, 255, 134, 0.34);

// For git diff info. i.e. in the gutter
@syntax-color-renamed: #96CBFE;
@syntax-color-added: #718C00;
@syntax-color-modified: #ff982d;
@syntax-color-removed: #D14;

.editor-colors {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

.editor {
  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .gutter {
    color: @syntax-gutter-text-color;
    background: @syntax-gutter-background-color;
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: #e87b00;
  }

  .invisible {
    color: #555;
  }

  .selection .region {
    background-color: #e1e1e1;
  }

  &.is-focused {
    .cursor {
      border-color: @syntax-cursor-color;
    }

    .selection .region {
      background-color: @syntax-selection-color;
    }

    .line-number.cursor-line-no-selection,
    .line.cursor-line {
      background-color: @syntax-gutter-background-color-selected;
    }
  }

  // Markdown
  .source.gfm {
    color: #444;
  }

  .gfm {
    .markup.heading {
      color: #111;
    }

    & .link {
      color: #888;
    }

    .variable.list {
      color: #888;
    }
  }

  .markdown {
    .paragraph {
      color: #444;
    }

    .heading {
      color: #111;
    }

    .link {
      color: #888;

      .string {
        color: #888;
      }
    }
  }

  .search-results .marker .region {
    background-color: transparent;
    border: 1px solid @syntax-result-marker-color;
  }
  .search-results .marker.current-result .region {
    border: 1px solid @syntax-result-marker-color-selected;
  }
}

.string {
  color: #210fdf;
}

// String interpolation in Ruby, CoffeeScript, and others
.source .string {
  .source,
  .meta.embedded.line {
    color: #5A5A5A;
  }

  .punctuation.section.embedded {
    color: #920B2D;

    .source {
      color: #920B2D;  // Required for the end of embedded strings in Ruby #716
    }
  }
}

.constant {
  &.numeric {
    color: #D14;
  }

  &.language {
    color: #606aa1;
  }

  &.character,
  &.other {
    color: #606aa1;
  }

  &.symbol {
    color: #990073;
  }

  &.numeric.line-number.find-in-files .match {
    color: rgba(143, 190, 0, 0.63);
  }
}

.variable {
  color: #008080;

  &.parameter {
    color: #606aa1;
  }
}

// Keywords
.keyword {
  color: #222;
  font-weight: bold;

  &.unit {
    color: #445588;
  }

  &.special-method {
    color: #0086B3;
  }
}

.storage {
  color: #222;

  &.type {
    color: #222;
  }
}

.entity {
  &.name.class {
    text-decoration: underline;
    color: #606aa1;
  }

  &.other.inherited-class {
    text-decoration: underline;
    color: #606aa1;
  }

  &.name.function {
    color: #900;
  }

  &.name.tag {
    color: #008080;
  }

  &.other.attribute-name {
    color: #458;
    font-weight: bold;
  }

  &.name.filename.find-in-files {
    color: #E6DB74;
  }
}

.support {
  &.constant,
  &.function,
  &.type {
    color: #458;
  }

  &.class {
    color: #008080;
  }
}

.invalid {
  color: #F8F8F0;
  background-color: #00A8C6;

  &.deprecated {
    color: #F8F8F0;
    background-color: #8FBE00;
  }
}

.meta {
  &.structure.dictionary.json > .string.quoted.double.json,
  &.structure.dictionary.json > .string.quoted.double.json .punctuation.string {
    color: #000080;
  }

  &.structure.dictionary.value.json > .string.quoted.double.json {
    color: #d14;
  }

  &.diff,
  &.diff.header {
    color: #75715E;
  }
}

// CSS Styles
.css {
  &.entity, .entity.attribute-name {}
  &.support.property-name {
    color: #000000;
  }
  &.meta.property-value { color: #937500; }

  &.constant { color: #560648; }

  &.support.function.misc { color: #ce7e00; } // url part of url()
  &.punctuation.section.function {} // semicolons, etc

  &.rgb-value,
      &.rgb-value .punctuation.definition.constant { color:#ac0000; } // colors - #560808

  &.meta.selector,
      &.meta.selector * { color: #458; font-weight: bold; }

  &.keyword.other.important { font-weight: normal; color: #7c0000; }
  &.keyword.other.unit {
    color: #560808;
    font-weight: normal;
  }
  &.string { color: #f800d6; }
}

.bracket-matcher {
  background-color: #C9C9C9;
  opacity: .7;
  border-bottom: 0 none;
}

.tree-view {

    .list-group li:not(.list-nested-item).status-modified, .list-tree li:not(.list-nested-item).status-modified, .list-group li.list-nested-item.status-modified > .list-item, .list-tree li.list-nested-item.status-modified > .list-item
    	{ color: #0e004f; }
    .list-group li:not(.list-nested-item).status-ignored, .list-tree li:not(.list-nested-item).status-ignored, .list-group li.list-nested-item.status-ignored > .list-item, .list-tree li.list-nested-item.status-ignored > .list-item
    	{ color: #1d1919; }

}

.comment { font-style: italic; color: #848484; font-size:.98em; }
.php .comment .phpdoc { font-weight: bold; color: #848484; background-color:white; font-weight:normal;}
.php .string, .php .string .keyword { color: #0000ff; font-weight: normal; }
.php.source.sql.embedded { color: #0000ff; }

.php.constant.numeric { color: #c23838; }
.php.constant.language { color: #c23838; font-style:italic; } // null, true, false
.php.constant.other { color: #5d0000; }
.php.constant.character.escape { color: #606aa1;} // \n\r

.php.variable, .php.variable.other { color:#268377; font-weight:normal;  }
.php.variable.other.property { font-weight:normal; color:black; }

.php.punctuation.section.embedded.begin,
.php.punctuation.section.embedded.end { color: #ff01ee; font-weight: bold; }

.php.entity.name.type.class {color: #3a3a3a; text-decoration: none; } // class name declaration
.php.entity.name.function { color: #343434; } // function name
.php.entity.other.inherited-class { color:black; text-decoration: none; }

.php.support.class { color:#000000; } // your own classes in use
.php.support.other.namespace { color: black; } // your own namespaces

.php.storage { color: @dark-purple; font-weight: bold; } // common keywords
.php.storage.type {}
.php.storage.type.function {} // function declaration
.php.storage.type.class {} // class declaration
.php.storage.modifier {}
.php.storage.modifier.extends {} // extends

.php.support.function { color: #070060; }
.php.support.function.url {} // url functions
.php.support.function.curl {} // curl functions
.php.support.function.basic_functions {} // define
.php.support.function.var {} // is_numeric
.php.support.function.construct { color: @dark-purple; font-weight: bold; } // echo
.php.meta.array .support.function.construct { color: #2b0087; font-weight: bold; }
.php.support.constant.ext { color: #5e0c0c; font-weight:normal; } // CURLOPT_POSTFIELDS, etc
.php.support.other.namespace.use { color: black; } // use Classname
.php.support.class.builtin { color: #742a86; } // use mysqli

.php.meta.function-call { color:black; } // your own functions
.php.meta.function-call.static {} // your own functions called using static

.php.keyword { color: @dark-purple; font-weight: bold; }
.php.keyword.operator { color:black; font-weight:normal; }
.php.keyword.operator.error-control { color: #7d7a7a; font-size:.9em; font-style:italics; } // the @
.php.keyword.control { color: @dark-purple; font-weight: bold; } // return, exit, break, case, if, for
.php.keyword.other.namespace {}
.php.keyword.other.new {}
.php.keyword.operator.class {} // Class::static
